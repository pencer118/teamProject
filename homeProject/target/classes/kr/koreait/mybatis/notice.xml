<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.koreait.mybatis.MybatisDAO">
	
	<!-- 테이블에 저장된 전체 글의 개수얻어오기. -->
	<select id="selectCount" resultType="int">
		select count(*) from SPRING_NOTICE
	</select>
	
	<!-- 한페이지 분량의 글 얻어오기 -->
	<select id="selectList" parameterType="java.util.HashMap" resultType="vo">
	<![CDATA[
	select * from (
		select rownum rnum, AA.* from (	
			select * from SPRING_NOTICE order by idx desc
		)AA where rownum <= #{endNo}
	) where rnum >= #{startNo}
	]]>	
	</select>
	
	<!-- 공지글 한건을 저장  -->
   <insert id="insert" parameterType="vo">
      insert into SPRING_NOTICE (IDX, TITLE, content, attached)
      values (spring_notice_idx_seq.nextval, #{title}, #{content}, #{attached})
   </insert>
	
	<!-- 글 한 건을 얻어온다. -->
	<select id="selectByIdx" parameterType="int" resultType="vo">
		select * from SPRING_NOTICE where idx = #{idx}
	</select>
	
	<!-- 글 1건 삭제 -->
	<delete id="delete" parameterType="int">
		delete from SPRING_NOTICE where idx = #{idx}
	</delete>
	
	<!-- 수정 -->
	<update id="update" parameterType="vo">
		update SPRING_NOTICE set title = #{title}, content = #{content} where idx = #{idx}
	</update>
	
	<!-- 상품 등록(악세사리) -->
	<insert id="insertGoods_acc" parameterType="kr.koreait.vo.GoodsVO">
		insert into SPRING_ACC (IDX, name,goodsDir ,price,category,id_number,photo, item_comment, goodsColor,sub_category)
		values (spring_acc_idx_seq.nextval, #{name}, #{goodsDir},#{price},#{category},#{id_Number},#{photo}, #{item_comment}, #{goodsColor}, #{sub_Category})
	</insert>
	
	<!-- 상품 등록(상의) -->
	<insert id="insertGoods_top" parameterType="kr.koreait.vo.GoodsVO">
		insert into SPRING_TOP (IDX, name,goodsDir ,price,category,id_number,photo, item_comment, goodsColor,sub_category)
		values (spring_acc_idx_seq.nextval, #{name}, #{goodsDir},#{price},#{category},#{id_Number},#{photo}, #{item_comment}, #{goodsColor}, #{sub_Category})
	</insert>
	
	<!-- 상품 등록(하의) -->
	<insert id="insertGoods_bottom" parameterType="kr.koreait.vo.GoodsVO">
		insert into SPRING_BOTTOM (IDX, name, goodsDir ,price,category,id_number,photo, item_comment, goodsColor,sub_category)
		values (spring_acc_idx_seq.nextval, #{name}, #{goodsDir},#{price},#{category},#{id_Number},#{photo}, #{item_comment}, #{goodsColor}, #{sub_Category})
	</insert>
	
	<!-- 상품 이름idx을 얻어온다. -->
	<select id="selectGoodsIdx" resultType="int">
	select last_number from USER_SEQUENCES where SEQUENCE_NAME = 'SPRING_ACC_IDX_SEQ'
	</select>
	<!-- 주문한 상품을 넣어준다. -->
	<insert id="insertStatus" parameterType="kr.koreait.vo.StatusVO">
	insert into spring_status(idx,user_id,addr,item_name,id_number,color,category,item_size,price,ea,name,phone,email,status) 
		values(SPRING_STATUS_IDX_SEQ.nextval,#{user_id},#{addr},#{item_name},#{id_number},#{color},#{category},#{item_size},#{price},#{ea},#{name},#{phone},#{email},#{status})
	</insert>
	<!-- 주문된 상품에 주문량을 올려준다. -->
	<update id="VolumeTop" parameterType="kr.koreait.vo.StatusVO">
		update spring_top set volume = volume+#{ea} where idx = #{idx}
	</update>
	<update id="VolumeAcc" parameterType="kr.koreait.vo.StatusVO">
		update spring_acc set volume = volume+#{ea} where idx = #{idx}
	</update>
	<update id="VolumeBottom" parameterType="kr.koreait.vo.StatusVO">
		update spring_bottom set volume = volume+#{ea} where idx = #{idx}
	</update>
	<!-- 주문된 상품에 재고를 계산한다. -->
	<update id="updateEa" parameterType="kr.koreait.vo.StatusVO">
		update spring_stoke set ea = ea-#{ea} where idx = #{idx}  and color=#{color} and size1=#{item_size} 
	</update>
	<insert id="insertStoke" parameterType="kr.koreait.vo.StokeVO">
		insert into SPRING_STOKE(idx, color, ea, size1, category, item_name) values(#{idx}, #{color}, #{ea}, #{size1}, #{category}, #{item_name})
	</insert>
	
	<select id="topCount" resultType="int">
		select count(*) from SPRING_TOP
	</select>
	
	<select id="topList"  parameterType="java.util.HashMap" resultType="kr.koreait.vo.GoodsVO">
		<![CDATA[
			select * from (
				select rownum rnum, AA.* from (	
					select * from SPRING_TOP order by idx desc
				)AA where rownum <= #{endNo}
			) where rnum >= #{startNo}
		]]>	
	</select>
	
	<select id="bottomCount" resultType="int">
		select count(*) from SPRING_BOTTOM
	</select>
	
	<select id="bottomList"  parameterType="java.util.HashMap" resultType="kr.koreait.vo.GoodsVO">
		<![CDATA[
			select * from (
				select rownum rnum, AA.* from (	
					select * from SPRING_BOTTOM order by idx desc
				)AA where rownum <= #{endNo}
			) where rnum >= #{startNo}
		]]>	
	</select>
	
	<select id="accCount" resultType="int">
		select count(*) from SPRING_ACC
	</select>
	
	<select id="accList"  parameterType="java.util.HashMap" resultType="kr.koreait.vo.GoodsVO">
		<![CDATA[
			select * from (
				select rownum rnum, AA.* from (	
					select * from SPRING_ACC order by idx desc
				)AA where rownum <= #{endNo}
			) where rnum >= #{startNo}
		]]>	
	</select>
	
	<select id="selectGoods" parameterType="int" resultType="kr.koreait.vo.GoodsVO">
		select * from SPRING_BOTTOM where idx=#{idx} union select * from SPRING_top where idx=#{idx} union select * from SPRING_acc where idx=#{idx}		
	</select>
	
	<select id="selectNoticeIdx" resultType="int">
	  select last_number from USER_SEQUENCES where SEQUENCE_NAME = 'SPRING_NOTICE_IDX_SEQ'
   </select>
   
   <select id="selectStatus" parameterType="String" resultType="kr.koreait.vo.StatusVO">
   		select * from SPRING_STATUS where user_id = #{id}
   </select>
   
  <select id="selectColor" resultType="kr.koreait.vo.StokeVO">
         select * from spring_stoke where idx = #{idx}
   </select>
   
    <select id="reSize" parameterType="kr.koreait.vo.Resize" resultType="String">
   		select size1 from spring_stoke where idx = #{idx} and color=#{color}
   </select>
   
   <select id="newCount" parameterType="int" resultType="int">
   <![CDATA[
	   select count(*) from(
	      select * from spring_top where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
				union
		  select * from spring_bottom where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
				union
		  select * from spring_acc where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
	   ) where rownum <= #{newListSize}
	]]>		   
	</select>
   
   <select id="newList"  parameterType="int" resultType="kr.koreait.vo.GoodsVO">
		<![CDATA[
			select * from (	
				select * from spring_top where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
				union
				select * from spring_bottom where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
				union
				select * from spring_acc where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
			) where rownum <= #{newListSize} 
		]]>	
	</select>
		  
	<select id="bestCount" parameterType="int" resultType="int">
	   <![CDATA[
		   select count(*) from(
		     select * from spring_top where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
				union
			 select * from spring_bottom where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
				union
			 select * from spring_acc where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
		   ) where rownum <= #{bestListSize}
		]]>		   
	</select>	
	
	   <select id="bestList"  parameterType="int" resultType="kr.koreait.vo.GoodsVO">
		<![CDATA[
			select * from (	
				select * from spring_top where volume >=10
				union
				select * from spring_bottom where volume >=10
				union
				select * from spring_acc where volume >=10
			) where rownum <= #{bestListSize} 
		]]>	
		</select>
	
	<select id="bestSlide" resultType="kr.koreait.vo.GoodsVO">
		<![CDATA[
			select * from (	
				select * from spring_top where volume >=10
				union
				select * from spring_bottom where volume >=10
				union
				select * from spring_acc where volume >=10
			) where rownum <= 6 order by volume desc
		]]>	
	</select>
	
	<select id="newMain" resultType="kr.koreait.vo.GoodsVO">
	   <![CDATA[
		   select * from(
		     select * from spring_top where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
				union
			 select * from spring_bottom where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
				union
			 select * from spring_acc where (SELECT SYSDATE FROM DUAL)<=(WRITEDATE+8)
		   ) where rownum <= 6
		]]>		   
	</select>
	
	<!-- 상의 서브카테고리 -->
	<select id="subTopCount" parameterType="int" resultType="int">
		select count(*) from SPRING_TOP where sub_category = #{sub}
	</select>
	
	<select id="subTopList" parameterType="java.util.HashMap" resultType="kr.koreait.vo.GoodsVO">
		<![CDATA[
			select * from (
				select rownum rnum, AA.* from (	
					select * from SPRING_TOP where sub_category = #{sub} order by idx desc
				)AA where rownum <= #{endNo}
			) where rnum >= #{startNo}
		]]>	
	</select>
	<!-- 하의 서브카테고리 -->
	<select id="subBottomCount" parameterType="int" resultType="int">
		select count(*) from SPRING_BOTTOM where sub_category = #{sub}
	</select>
	
	<select id="subBottomList" parameterType="java.util.HashMap" resultType="kr.koreait.vo.GoodsVO">
		<![CDATA[
			select * from (
				select rownum rnum, AA.* from (	
					select * from SPRING_BOTTOM where sub_category = #{sub} order by idx desc
				)AA where rownum <= #{endNo}
			) where rnum >= #{startNo}
		]]>	
	</select>
	<!-- 액세사리 서브카테고리 -->
	<select id="subAccCount" parameterType="int" resultType="int">
		select count(*) from SPRING_ACC where sub_category = #{sub}
	</select>
	
	<select id="subAccList" parameterType="java.util.HashMap" resultType="kr.koreait.vo.GoodsVO">
		<![CDATA[
			select * from (
				select rownum rnum, AA.* from (	
					select * from SPRING_ACC where sub_category = #{sub} order by idx desc
				)AA where rownum <= #{endNo}
			) where rnum >= #{startNo}
		]]>	
	</select>
	
	<select id="getEA" parameterType="kr.koreait.vo.Resize" resultType="int">
		select ea from SPRING_STOKE where idx=#{idx} AND color=#{color} AND size1=#{size}
	</select>
</mapper>